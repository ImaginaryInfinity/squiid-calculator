use squiid_parser::parse;

#[test]
fn test_parsing() {
    assert_eq!(
        parse(
            "sqrt(5*(((((1+0.2*(350/661.5)^2)^3.5-1)*(1-(6.875*10^-6)*25500)^-5.2656)+1)^0.286-1))"
        ),
        Ok(vec![
            "5", "1", "0.2", "350", "661.5", "/", "2", "^", "*", "+", "3.5", "^", "1", "-", "1",
            "6.875", "10", "6", "chs", "^", "*", "25500", "*", "-", "5.2656", "chs", "^", "*", "1",
            "+", "0.286", "^", "1", "-", "*", "sqrt"
        ])
    );

    assert_eq!(parse("$A * $B + $C"), Ok(vec!["$A", "$B", "*", "$C", "+"]));

    assert_eq!(parse("$A + $B * $C"), Ok(vec!["$A", "$B", "$C", "*", "+"]));

    assert_eq!(
        parse("$A * ($B + $C)"),
        Ok(vec!["$A", "$B", "$C", "+", "*"])
    );

    assert_eq!(
        parse("34 * 5.3 ^ 2 + 0.9"),
        Ok(vec!["34", "5.3", "2", "^", "*", "0.9", "+"])
    );

    assert_eq!(
        parse("8e3 * ($B + 4.532 * -0.2) + $A"),
        Ok(vec![
            "8e3", "$B", "4.532", "0.2", "chs", "*", "+", "*", "$A", "+"
        ])
    );
}

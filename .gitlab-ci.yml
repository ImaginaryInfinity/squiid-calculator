workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web"'

stages:
  - test
  - build
  - deploy

test:
  stage: test
  image: rust:latest
  script:
    - cargo build --verbose
    - RUST_BACKTRACE=1 cargo test -p squiid -p squiid-engine -p squiid-parser

build-flatpak:
  stage: build
  image: alpine:latest
  before_script:
    - apk update
    - apk add flatpak rust make python3 yq cargo flatpak-builder py3-aiohttp py3-toml
    - flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
    - flatpak install -y flathub org.freedesktop.Platform//22.08 org.freedesktop.Sdk//22.08 org.freedesktop.Sdk.Extension.rust-stable/x86_64/22.08
  script:
    - make flatpak
  artifacts:
    paths:
      - package-build/
    expire_in: "60 minutes"

build-snap:
  stage: build
  image: ubuntudesktop/gnome-3-38-2004
  script:
    - apt update
    - apt install cargo jq python3-pip gettext-base -y
    - pip3 install yq
    - make snap
  artifacts:
    paths:
      - squiid*.snap
    expire_in: "60 minutes"

build-appimage:
  stage: build
  image: alpine:latest
  before_script:
    - apk update
    - apk add curl
    - curl -L https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage -O /opt/appimagetool
    - sudo chmod +x /opt/appimagetool
    - cd /opt/; sudo /opt/appimagetool --appimage-extract
    - sudo mv /opt/squashfs-root /opt/appimagetool.AppDir
    - sudo ln -s /opt/appimagetool.AppDir/AppRun /usr/local/bin/appimagetool

  script:
    - make appimage
  artifacts:
    paths:
      - package-build/Squiid_Calculator.AppImage

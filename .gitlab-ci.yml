workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web"'

stages:
  # - test
  - build
  - deploy

# test:
#   stage: test
#   image: rust:latest
#   script:
#     - cargo build --verbose
#     - RUST_BACKTRACE=1 cargo test -p squiid -p squiid-engine -p squiid-parser

build-flatpak:
  stage: build
  image: fedora:latest
  before_script:
    - dnf -y install rust cargo make flatpak flatpak-builder python3-aiohttp python3-toml
    - flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
    - flatpak install -y flathub org.freedesktop.Platform//22.08 org.freedesktop.Sdk//22.08 org.freedesktop.Sdk.Extension.rust-stable/x86_64/22.08
  script:
    - make flatpak
  artifacts:
    paths:
      - package-build/
    expire_in: "60 minutes"

build-snap:
  stage: build
  image: ubuntudesktop/gnome-3-38-2004
  script:
    - apt update
    - apt install cargo gettext-base -y
    - make snap
  artifacts:
    paths:
      - squiid*.snap
    expire_in: "60 minutes"

build-appimage:
  stage: build
  image: archlinux:latest
  before_script:
    - pacman --noconfirm -Syu curl make rust
    - curl -L https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage -o /usr/local/bin/appimagetool
    - chmod a+rx /usr/local/bin/appimagetool
    - previous_dir=`pwd`
    - cd /opt; appimagetool --appimage-extract
    - cd $previous_dir
    - mv /opt/squashfs-root /opt/appimagetool.AppDir
    - rm /usr/local/bin/appimagetool
    - ln -s /opt/appimagetool.AppDir/AppRun /usr/local/bin/appimagetool

  script:
    - make appimage
  artifacts:
    paths:
      - package-build/Squiid_Calculator.AppImage

build-deb:
  stage: build
  image: ubuntu:latest
  before_script:
    - apt update
    - apt install -y build-essential binutils lintian debhelper dh-make devscripts curl git cmake musl-dev musl-tools cargo
    # - curl --proto '=https' --tlsv1.3 https://sh.rustup.rs -sSf | sh -s -- -y
    # - source "$HOME/.cargo/env"
    # - rustup target add x86_64-unknown-linux-musl
    # - rustup show
    # - rustup default stable
    - ln -sf /usr/bin/g++ /usr/bin/musl-g++
  script:
    - make deb
  artifacts:
    paths:
      - squiid_0.1.0-1_amd64.deb
      - squiid_0.1.0-1_amd64.buildinfo
      - squiid_0.1.0-1_amd64.changes